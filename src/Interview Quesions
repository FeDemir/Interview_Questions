Q1: String -- Frequency of Characters Write a return method that can find the frequency of characters Ex: FrequencyOfChars("AAABBCDD") ==> A3B2C1D2
Q2: String -- Same letters Write a return method that check if a string is build out of the same letters as another string. Ex: same("abc", "cab"); -> true same("abc", "abb"); -> false:
Q3: String -- Remove Duplicates. Write a return method that can remove the duplicated values from String Ex: removeDup("AAABBBCCC") ==> ABC
Q4: String -- Find the unique Write a return method that can find the unique characters from the String Ex: unique("AAABBBCCCDEF") ==> "DEF";
Q5: String -- Reverse Write a return method that can reverse String Ex: Reverse("ABCD"); ==> DCBA

Q6: String -- Sort Letters and Numbers from alphanumeric String: Given alphanumeric String, we need to split the string into substrings of consecutive letters or numbers, sort the individual string and append them back together Ex: Input: "DC501GCCCA098911" OutPut: "CD015ACCCG011899"
Q7:String -- Password Validation Task 1: Write a return method that can verify if a password is valid or not.
Requirements:
 1. Password MUST be at least have 6 characters and should not contain space.
 2. Password should at least contain one upper case letter
 3. Password should at least contain one lowercase letter
 4. Password should at least contain one special characters
 5. Password should at least contain a digit if all requirements above are met, the method returns true, otherwise returns false
Q8:String -- sum of digits in a string: Write a method that can return the sum of the digits in a string.
Q9:Array -- Find Maximum:  Write a method that can find the maximum number from an int Array.
Q10:Array -- Find Minimum: Write a method that can find the maximum number from an int Array.
Q11: Array -- Sort Ascending
Write a return method that can sort an int array in Ascending order without using the sort method of the Arrays class
Ex:
          int[] arr = {10, 9, 8, 7};
           arr = Sort(arr);         ==>{ 7, 8, 9, 10};

Q12: Array -- Sort Descending
Write a return method that can sort an int array in descending order without using the sort method of the Arrays class
Ex:  int[] arr = {10,20,7, 8, 90};
              arr = Sort(arr);  ==>  {90, 20, 10, 8, 7};
Q13: Array -- N unique integers that sum up to 0
Write a function:
that, given an integer N (1 < N < 100), returns an array containing N unique integers that sum up to 0. The function can return any such array. For example, given N = 4, the function could return [1,0, -3,2] or [-2,1, -4,5]. The answer [1, -1,1,3] would be incorrect (because value 1 occurs twice). For N = 3 one of the possible answers is [-1,0,1]  (but there are many more correct answers).

Q14: Array -- Permutation combinations
Given an array of 3 characters print all permutation combinations from the given characters.

Q15: Array -- Move zeros to the end
- Write a method that can move all the zeros to  last indexes of the array (Do Not Use Sort Method)

Q16: Array -- Concat two arrays
Write a return method that can concate two arrays.

Q17:  Numbers -- odd & even
Write  a method which can identifies given number is even or odd
EX:
identify(5) ->  "Odd"
identify(6) ->  "Even".

Q18: Numbers -- Divide without / operator
Write a method that can divide two numbers without using division operator.





